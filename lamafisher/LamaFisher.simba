{=================================================================\
|                        Shilo Village Fisher                     |
|                              by Lama                            |
|=================================================================|
|                                                                 |
|   Author: Lama                                                  |
|   Description: Fishes in Shilo Village                          |
|   Contact: Private message @ SRL Forums! :)                     |
|                                                                 |
|                       CURRENT VERSION: 1.0                      |
|                      LAST UPDATED:                              |
\_________________________________________________________________}

{============================ USER SETUP =========================)

 1. Put feathers in the last slot in your bag
 2. Place character near fishing spots in Shilo Village
 3. Hit RUN
 4. Fill out form, hit Start Script
 5. Phat XP

(=============================== STOP =============================}

program LamaFisher;

{$DEFINE SMART}
{$i srl-6/srl.simba}
{$I SPS/lib/SPS-RS3.Simba}
{$i srl-6/lib/misc/srlplayerform.simba}

const

{ INFO }
  SCRIPT := 'LamaFisher';
  VERSION := '1.0';

{ FISH }
  FISH_RAINBOW := 0;
  FISH_TROUTSALMON := 1;

{ XP }
  XP_RAINBOW := 80;
  XP_SALMON := 70;
  XP_TROUT := 50;

{ PLAYER FORM }
  P_FISH := -1;
  P_FEATHER_COUNT := -1;
  P_DROP_HOTKEY := '=';

var
  caughtRainbow, caughtSalmon, caughtTrout, totalCaught: integer;
  loadsDone, fishXP, totalXP, XPperHour: integer;
  rainbowDTM, salmonDTM, troutDTM: integer;
  feathersLeft: integer;
  PaintBitmap: integer;

procedure signature();
begin

  writeLn('.____                            _________            .__        __          ');
  wait(125);
  writeLn('|    |   _____    _____ _____   /   _____/ ___________|__|______/  |_  ______');
  wait(125);
  writeLn('|    |   \__  \  /     \\__  \  \_____  \_/ ___\_  __ \  \____ \   __\/  ___/');
  wait(125);
  writeLn('|    |___ / __ \|  Y Y  \/ __ \_/        \  \___|  | \/  |  |_> >  |  \___ \ ');
  wait(125);
  writeLn('|_______ (____  /__|_|  (____  /_______  /\___  >__|  |__|   __/|__| /____  >');
  wait(125);
  writeLn('        \/    \/      \/     \/        \/     \/         |__|             \/ ');
  wait(125);
  writeLn('');
  writeLn('                         Script: ' + SCRIPT + ' ' + VERSION);
  wait(500);
  writeLn('');
  writeLn('                         Loading, please wait ...');
  writeLn('');

end;

procedure initPlayerForm();
begin
  with playerForm do
  begin
    name := 'Lama''s Fisher'; // the title of the SPF, usually the name of your script
    scriptHelpThread := '';    // a link to a help thread, if set to '' will link to my setup guide

    editBoxLabels := ['Feather Count', 'Drop Action Bar Hotkey'];     // edit boxes are created for each array element
    editBoxDefaults := ['0', '='];             // optional default values for each edit box; array length must equal editBoxLabel length
    // optional hints for each edit box; hints are shown when the user holds the mouse over the component
    editBoxHints := ['How many feathers do you have?', 'Which action bar hotkey is your drop fish action bound to?'];

    comboBoxLabels := ['What are you fishing?'];
    comboBoxDefaults := ['Rainbow Fish'];
    comboBoxHints := ['What type of fish are you fishing?'];

    // this needs to be done for every element in the comboBoxLabels array
    setLength(comboBoxItems, length(comboBoxLabels));
    comboBoxItems[0] := ['Rainbow Fish', 'Trout/Salmon'];

    checkBoxLabels := ['Save SRL log', 'Debug/Paint Status', 'Debug SMART', 'Text Progress Report']; // same as editBoxLabels but for check boxes
    checkBoxDefaults := ['true', 'false', 'false', 'false'];
    checkBoxHints := ['Do you want to save SRL debug to a log file (recommended)?', 'Want to see what the script is thinking?', 'Want to see colorful boxes on SMART?', 'Output the progress report to the debug box?'];
  end;
end;

procedure declarePlayers();
var
  i: integer;
begin
  players.setup(playerForm.playerNames, playerForm.playerFile); // load the SPF players from the SRL Player Manager
  currentPlayer := 0;                // player to use first

  // set player attributes based on the settings from the form
  for i := 0 to high(players) do
    with players[i] do
    begin
      // convert the integers
      integers[P_FEATHER_COUNT] := strToInt(playerForm.players[i].settings[0]);  // Feather Count

      strings[P_DROP_HOTKEY] := playerForm.players[i].settings[1]; // Drop Hotkey

      // booleans
      booleans[0] := strToBool(playerForm.players[i].settings[2]); // Save SRL Log
      booleans[1] := strToBool(playerForm.players[i].settings[3]); // Debug/Paint Status
      booleans[2] := strToBool(playerForm.players[i].settings[4]); // Debug SMART
      booleans[3] := strToBool(playerForm.players[i].settings[5]); // Debug Report

      case playerForm.players[i].settings[6] of                    // Fish Type
        'Rainbow Fish': integers[P_FISH] := FISH_RAINBOW;
        'Trout/Salmon': integers[P_FISH] := FISH_TROUTSALMON;
      end;

      // any other data types you've decided to use
    end;
end;

procedure loadDTMS();
begin
  rainbowDTM := DTMFromString('m1gAAAHic42KAAEYg/vX//382IP0VSPMAaXYg/gRkMyCBb0D+TyAGqf3zHwKYgeKsUPWcQDx56k0gyUQQi0DtpRZGAAA2+yIk');
  salmonDTM := DTMFromString('m1gAAAHic42KAAG4o5gHiv////+cE0t+BNBOQZgTi30A2SN0XIP0DiH8B8R8g/gdVwwbEXFD9tX6uQJKJIBaBmk0tjAAAeeUhVw==');
  troutDTM := DTMFromString('m1gAAAHic42KAAG4o5gHiv////+cE0t+BNBOQZgTi30A2SN0XIP0DiH8B8R8g/gdVwwbEXFD9jdXVQJKJIBaBmk0tjAAArZohvg==');
end;

procedure unloadDTMS();
begin
  freeDTM(rainbowDTM);
  freeDTM(salmonDTM);
  freeDTM(troutDTM);
end;

procedure paintStatus(status: string);
begin
  if players[currentPlayer].booleans[1] then
  begin
    try
      smartImage.clearArea(intToBox(chatbox.x2-320,chatbox.y2-19, chatBox.x2, chatBox.y2));
    except
    end;

    smartImage.drawText('Status: ' + status, point(chatbox.x2-320,chatbox.y2-19), smallChars, false, clRed);
  end;
end;

procedure checkForImages(path, link, item: string);
var
  progFile: longInt;
  picName: string;

begin
  picName := AppPath + path;

  try
    if not fileExists(picName) then
    begin
      writeLn('NOTIFICATION: ' + item + ' does not exist - Downloading it now!.');
      progFile := createFile(picName);
    end else
      exit;

    closeFile(progFile);

    progFile := rewriteFile(picName, false);
    writeFileString(progFile, getPage(link));
    writeLn('NOTIFICATION: ' + item + ' has been download to Simba folder!');
    writeLn('');
  finally
    if (progFile > 0) then
      closeFile(progFile);
  end;
end;

function perHour(amt, time: integer): integer;
begin
  if (amt = -1) then
  begin
    result := -1;
    exit;
  end;

  try
    result := round((amt * 60) / (time / 60000));
  except
  end;
end;

procedure antiban();
begin
  case(random(1000) + 1) of
    1..30:
    begin
      mouseOffClient(OFF_CLIENT_RANDOM);
      if players[currentPlayer].booleans[1] then
        writeLn('Antibanning ...');
    end;
    31..50:
    begin
      sleepAndMoveMouse(1000 + random(2000));
      if players[currentPlayer].booleans[1] then
        writeLn('Antibanning ...');
    end;
    51..85:
    begin
      hoverSkill(SKILL_FISHING);
      if players[currentPlayer].booleans[1] then
        writeLn('Antibanning ...');
    end;
    86..110:
    begin
      smallRandomMouse();
      if players[currentPlayer].booleans[1] then
        writeLn('Antibanning ...');
    end;
    111..130:
    begin
      randomCameraAngle(MS_ANGLE_HIGH);
      if players[currentPlayer].booleans[1] then
        writeLn('Antibanning ...');
    end;
    131..145:
    begin
      wait(randomRange(3000, 6500) + random(1000));
      randomRClickItem();
      if players[currentPlayer].booleans[1] then
        writeLn('Antibanning ...');
    end;
  end;
end;


procedure orientPlayer();
begin
  if players[currentPlayer].booleans[1] then
  begin
    writeLn('Orienting player ...');
  end;

  paintStatus('Orienting player ...');

  exitTreasure();

  minimap.clickCompass();
  mainScreen.setAngle(MS_ANGLE_HIGH);
  //mainscreen.setZoom(true);
  tabBackPack.open();
end;

function countFeathers(): integer;
begin
  result := getItemAmount(tabBackpack.getSlotBox(28));
end;

function packFull(): boolean;
begin
  result := tabBackpack.isFull();
end;

procedure beginFishing();
var
  x, y, i: integer;
  bubbleTPA: TPointArray;
  bubblesATPA: T2DPointArray;

begin
  if players[currentPlayer].booleans[1] then
  begin
    writeLn('Fishing ...');
  end;

  paintStatus('Fishing ...');

  repeat
    findColorsSpiralTolerance(x, y, bubbleTPA, 13352368, mainScreen.getBounds(), 11, colorSetting(2, 0.16, 0.46));
  until length(bubbleTPA) > 0;

  mainScreen.filterPointsPlayer(bubbleTPA);

  bubblesATPA := bubbleTPA.toATPA(6, 6);
  bubblesATPA.sortFromMidPoint(mainScreen.playerPoint);

  if players[currentPlayer].booleans[2] then
    smartImage.debugATPA(bubblesATPA);

  for i := 0 to high(bubblesATPA) do
  begin
    mouse(middleTPA(bubblesATPA[i]), MOUSE_MOVE);
    if isMouseOverText(['ishing spot'], 500) then
    begin
      fastClick(MOUSE_LEFT);
    end;
  end;

  if players[currentPlayer].booleans[2] then
    smartImage.clearArea(intToBox(0, 0, 750, 395));

  minimap.waitPlayerMoving();
end;

procedure getXP();
begin
  if (players[currentPlayer].integers[P_FISH] = 0) then
    caughtRainbow := tabBackpack.countDTM(rainbowDTM);

  if (players[currentPlayer].integers[P_FISH] = 1) then
  begin
    caughtSalmon := tabBackpack.countDTM(salmonDTM);
    caughtTrout := tabBackpack.countDTM(troutDTM);
  end;

  fishXP := ((caughtRainbow * XP_RAINBOW) + (caughtSalmon * 70) + (caughtTrout * 50));
  totalCaught := caughtRainbow + caughtSalmon + caughtTrout;
end;

procedure dropFish();
begin
  typeSend(players[currentPlayer].strings[P_DROP_HOTKEY]);
end;

procedure paintProgress();
begin
  smartImage.drawText((msToTime(getTimeRunning, TIME_ABBREV)), Point(413, 442), UpCharsEx, false, clWhite); // Draw time running
  smartImage.drawText(toString(loadsDone) + ' loads', Point(413, 481), UpCharsEx, false, 1268443); // Draw how many loads completed
  smartImage.drawText(toString(totalXP) + ' (' + (toStr((perHour(totalXP, getTimeRunning())))) + ' P/H)', Point(413, 520), UpCharsEx, false, clYellow);  // Draw profit and profit per hour
end;

procedure debugProgress();
begin
  clearDebug();

  writeLn('|=====================================|');
  writeLn('             ' + SCRIPT + ' ' + VERSION + '         ');
  writeLn('                                      ');
  writeLn('  Time Running: ' + (msToTime(getTimeRunning, TIME_ABBREV)));
  writeLn('  Loads Done  : ' + toStr(totalCaught) + ' fish');
  writeLn('  Fish Caught : ' + toStr(loadsDone) + ' loads');
  writeLn('  Total XP    : ' + toStr(totalXP) + ' (' + (toStr((perHour(totalXP, getTimeRunning())))) + ' P/H)');
  writeLn('                                       ');
  writeLn('|=====================================|');
end;

procedure report();
begin
  paintProgress();

  if players[currentPlayer].booleans[1] then
    debugProgress();
end;

procedure terminate();
begin
  unloadDTMS();
  clearDebug();
  debugProgress();
end;

procedure mainLoop();
begin
  smartImage.drawBitmap(PaintBitmap, (point(4,426)));
  totalXP := 0;
  totalCaught := 0;
  loadsDone := 0;
  report();
  orientPlayer();

  repeat
    beginFishing();
    antiban();
    waitFunc(@(packFull), 50, 120000);

    repeat
      dropFish();
    until ((tabBackpack.countDTM(rainbowDTM)) + (tabBackpack.countDTM(salmonDTM)) + (tabBackpack.countDTM(troutDTM))) = 0;

    loadsDone := loadsDone + 1;
    totalXP = totalXP + fishXP;

    smartImage.clearArea(IntToBox(4, 426, 572, 577));
    smartImage.drawBitmap(PaintBitmap, (point(4,426)));
    report();
  until totalCaught >= (players[currentPlayer].integers[P_FEATHER_COUNT]) or ((players[currentPlayer].integers[P_FEATHER_COUNT]) - feathersLeft) <= 0;

  writeLn('All feathers have been used ... exiting to lobby ...');
  paintStatus('All feathers have been used ... exiting to lobby ...');

  debugProgress();

  players[currentPlayer].exitToLobby();
end;


begin
  clearDebug();
  smartPlugins := ['d3d9.dll'];
  signature();

  addOnTerminate('terminate');

  smartShowConsole := false;
  smartEnableDrawing := true;
  disableSRLDebug := false;

  disguise('LamaFisher');

  setupSRL();
  writeLn('');

  initPlayerForm();
  runPlayerForm();
  if (not playerForm.isScriptReady) then
    exit;

  declarePlayers();

  checkForImages('Scripts\lamascripts\fishpaint.png', 'https://i.imgur.com/hPB51uH.png', 'Paint image');
  PaintBitmap := loadBitmap(appPath + '\Scripts\lamascripts\fishpaint.png');

  loadDTMS();

  mainLoop();
end.
